# Maintainance

# Authors without work
SELECT ?author WHERE {
  ?author wdt:P31 wd:Q5 .
  # Those properties are the only one used for authors on Inventaire at the moment
  FILTER NOT EXISTS { ?work wdt:P50|wdt:P2679|wdt:P2680 ?author . }
}

###

# Editions without work
SELECT ?edition WHERE {
  ?edition wdt:P31 wd:Q3331189 .
  FILTER NOT EXISTS { ?edition wdt:P629 ?work . }
}

###

# Editions without publisher
SELECT ?edition WHERE {
  ?edition wdt:P31 wd:Q3331189 .
  FILTER NOT EXISTS { ?edition wdt:P123 ?publisher . }
}

###

# Editions without language
SELECT ?edition WHERE {
  ?edition wdt:P31 wd:Q3331189 .
  FILTER NOT EXISTS { ?edition wdt:P407 ?language . }
}

###

# Editions without cover
SELECT ?edition WHERE {
  ?edition wdt:P31 wd:Q3331189 .
  FILTER NOT EXISTS { ?edition invp:P2 ?cover . }
}

###

# Editions without ISBN
SELECT ?edition WHERE {
  ?edition wdt:P31 wd:Q3331189 .
  FILTER NOT EXISTS { ?edition wdt:P212 ?isbn . }
}

###

# Works without edition
SELECT ?work WHERE {
  ?work wdt:P31 wd:Q571 .
  FILTER NOT EXISTS { ?edition wdt:P629 ?work . }
}

###

# Works without author
SELECT ?work WHERE {
  ?work wdt:P31 wd:Q571 .
  FILTER NOT EXISTS { ?work wdt:P50 ?author . }
}

###

# type of Wikidata entities used by Inventaire items
SELECT ?type ?typeLabel (COUNT(?item) AS ?count ) WHERE {
  hint:Query hint:optimizer "None".
  ?item wdt:P1574 ?entity .
  FILTER(STRSTARTS(STR(?entity), 'http://www.wikidata.org/entity/Q')) .
  SERVICE wdq:sparql {
    ?entity wdt:P31 ?type .
    ?type rdfs:label ?typeLabel .
    FILTER(LANG(?typeLabel) = "en") .
  }
}
GROUP BY ?type ?typeLabel

###

# Authors with non-alphabetical chars
# Except whitespace - . ' and latin chars (éùàç...)
SELECT ?author ?label WHERE {
  ?author wdt:P31 wd:Q5 .
  ?author rdfs:label ?label .
  FILTER(REGEX(STR(?label), "[^a-zA-Z\\d\\s:\u00C0-\u024F'.-]", 'i')) .
}

###

# Authors that aren't used in any claim and where never edited
# Recommanded admin action: delete
SELECT ?author WHERE {
  ?author wdt:P31 wd:Q5 ;
          schema:version "2"^^xsd:integer ;
          wikibase:labels "1"^^xsd:integer ;
          wikibase:statements "1"^^xsd:integer ;
  FILTER NOT EXISTS { ?work ?property ?author . }

###

# Find authors on same item who are actually one author with reverted names
# Ex: "Traksmaa, August" and "August Traksmaa"
# Recommanded admin action: check if authors are the same human, delete one of them
SELECT DISTINCT ?author_a ?author_a_label ?item WHERE {
  ?item wdt:P50 ?author_a .
  ?item wdt:P50 ?author_b .
  ?author_a rdfs:label ?author_a_label .
  ?author_b rdfs:label ?author_b_label .

  # only authors who has a coma can be compared
  FILTER(CONTAINS(?author_a_label, ","))
  # filter if author_a label before comma is the end of author_b label
  FILTER(STRENDS(?author_b_label,STRBEFORE(?author_a_label, ",")))
}

###

# Find homonym co-authors
# Recommanded admin action: merge homonyms
SELECT DISTINCT ?author_a ?author_c {
# Re-run with b and d to find the other couples
# SELECT DISTINCT ?author_b ?author_d {

  # Find the authors of 2 works
  ?work_1 wdt:P50 ?author_a .
  ?work_1 wdt:P50 ?author_b .
  ?work_2 wdt:P50 ?author_c .
  ?work_2 wdt:P50 ?author_d .

  # For which authors are homonyms, making it very likely
  # that those are duplicates that can be merged: a->c b->d
  ?author_a rdfs:label ?author_a_label .
  ?author_b rdfs:label ?author_b_label .
  ?author_c rdfs:label ?author_a_label .
  ?author_d rdfs:label ?author_b_label .

  # Make sure the works are different and that 2 works produce only 1 row
  FILTER (STR(?work_1) > STR(?work_2))
  # Make sure the authors are different and that 2 authors produce only 1 row
  FILTER (STR(?author_a) > STR(?author_b))
  FILTER (STR(?author_c) > STR(?author_d))
  # Make sure that the homonym authors aren't just the same authors already
  FILTER (?author_a != ?author_c && ?author_b != ?author_d)
}
